#Schema for this file: https://cloud.google.com/build/docs/build-config-file-schema

#VARIABLES ---------------

#PROJECT_ID : GCP project ID - automatically filled by Cloud Build

#_ARTIFACT_REPO_NAME : Name of the GCP Cloud Artifacts Repo/bucket
#_IMAGE_NAME : The name to give to the build image in the docker build step
#_IMAGE_TAG : The version tag to give to the image in the docker build step

#_CLOUD_RUN_NAME : The name of the service you want to deploy to. If the service does not exist yet, this command creates the service during the deployment.  'status-sentry'

#_STATUS_UPDATE_TOPIC : The GCP PubSub topic to post Status Page Updates to
#_PING_RESPONSE_TOPIC : The GCP PubSub topic to post Ping responses to
#
#_CONFIG_LOCATION : The location of the configuration file for the statusSentry
#_TWITTER_TOKEN : The Twitter API bearer token to access status update streams on Twitter
#_OUTBOUND_URL : A URL to a service that statusSentry should push to as well as/instead of PubSub
#_STATUS_CHECK_ONLY : To run only the status checking not pinger
#_PINGER_ONLY : To run only the pinger not the status checking

#_PORT :The port that will be used for the webhooks on VM instances. Cloud Run defaults to 8080 

steps:
#Create the artefact repository : https://cloud.google.com/artifact-registry/docs/repositories/create-repos?hl=en-GB#gcloud
#- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
 # entrypoint: 'gcloud'
  #args:
   # - 'artifacts' 
    #- 'repositories' 
    #- 'create'
    #- '${_ARTIFACT_REPO_NAME}'
    #- '--repository-format=docker'
    #- '--location=europe-west2' 
    #- '--description="Repo for ${_IMAGE_NAME} docker images "'
    #- '--async' 
    #async returns immediately and doesn't error if exists

# Build Go program using Containerfile/Dockerfile
- name: 'docker'
  args: 
    - 'build'
    - '-f'
    - 'Dockerfile'
    - '-t'
    - 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_IMAGE_NAME}:${_IMAGE_TAG}'
    - '.'

    

# Push the container image to Container Registry: https://cloud.google.com/artifact-registry/docs/repositories/create-repos?hl=en-GB#gcloud
# Image tagging : https://cloud.google.com/artifact-registry/docs/docker/pushing-and-pulling?hl=en-GB#tag
- name: 'docker'
  args: 
    - 'push'
    - 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_IMAGE_NAME}:${_IMAGE_TAG}'

    
# Deploy an image from Artifacts Registry to Cloud Run: https://cloud.google.com/sdk/gcloud/reference/run/deploy
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args: 
    - 'run'
    - 'deploy'
    - '${_CLOUD_RUN_NAME}'
    - '--image'
    - 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_IMAGE_NAME}:${_IMAGE_TAG}'
    - '--region'
    - 'europe-west2'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--port'
    - '8080'
    - '--update-env-vars'
    - '^;^PROJECT_ID=$PROJECT_ID;CONFIG_LOCATION=${_CONFIG_LOCATION};STATUS_UPDATE_TOPIC=${_STATUS_UPDATE_TOPIC};PING_RESPONSE_TOPIC=${_PING_RESPONSE_TOPIC};TWITTER_TOKEN=${_TWITTER_TOKEN};OUTBOUND_URL=${_OUTBOUND_URL};PINGER_ONLY=${_PINGER_ONLY};STATUS_CHECK_ONLY=${_STATUS_CHECK_ONLY}'
    #https://cloud.google.com/sdk/gcloud/reference/topic/escaping

  # Deploy an image from artifacts registry to a VM on Cloud Compute
#- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
 # entrypoint: 'gcloud'
  #args: 
    #- 'compute'
    #- 'instances'
    #- 'create-with-container'
    #- '${_CLOUD_RUN_NAME}'
    #- '--container-image'
    #- 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_IMAGE_NAME}:${_IMAGE_TAG}'
  #env:
    #- 'CLOUDSDK_COMPUTE_REGION=europe-west2'
    #- 'CLOUDSDK_COMPUTE_ZONE=europe-west2-a'
    #- 'PORT=${_PORT}'

options:
  logging: CLOUD_LOGGING_ONLY
  env:
      - 'CONFIG_LOCATION=${_CONFIG_LOCATION}'
      - 'STATUS_UPDATE_TOPIC=${_STATUS_UPDATE_TOPIC}'
      - 'PING_RESPONSE_TOPIC=${_PING_RESPONSE_TOPIC}'
      - 'TWITTER_TOKEN=${_TWITTER_TOKEN}'
      - 'OUTBOUND_URL=${_OUTBOUND_URL}'
      - 'PINGER_ONLY=${_PINGER_ONLY}'
      - 'STATUS_CHECK_ONLY=${_STATUS_CHECK_ONLY}'